"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("@xstyled/styled-components"));

var _system = require("@xstyled/system");

var _Button = _interopRequireDefault(require("../Button"));

var _Frame = _interopRequireDefault(require("../Frame/Frame"));

var _excluded = ["children", "title", "icon", "active", "className"];

var _templateObject, _templateObject2, _templateObject3, _templateObject4;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var OptionsBox = _styledComponents["default"].ul(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  list-style: none;\n  padding: 0;\n  margin: 0;\n\n  display: flex;\n"])));

var Option = (0, _styledComponents["default"])(_Button["default"]).attrs({
  as: 'li'
})(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-left: 2;\n  padding: 0;\n\n  width: 17px;\n  height: 14px;\n\n  min-width: 0;\n  font-weight: 600;\n  font-size: 10;\n\n  &:active {\n    padding: 1 0 0 1;\n\n    outline: none;\n  }\n\n  &:first-child {\n    margin-right: 0;\n  }\n\n  &:focus {\n    box-shadow: inset 1px 1px 0px 1px ", ",\n      inset -1px -1px 0px 1px ", ";\n  }\n"])), (0, _system.th)('colors.borderLightest'), (0, _system.th)('colors.borderDark'));
Option.displayName = 'Option';
var TitleBarBackground = (0, _styledComponents["default"])(_Frame["default"])(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  height: 18;\n  margin-bottom: 2;\n\n  padding: 2;\n\n  display: flex;\n\n  box-shadow: none;\n\n  img {\n    width: 15;\n    height: 14;\n    margin-right: 4;\n  }\n\n  background: ", ";\n"])), function (_ref) {
  var active = _ref.active,
      theme = _ref.theme;
  return active ? theme.colors.headerBackground : theme.colors.headerNotActiveBackground;
});

var Title = _styledComponents["default"].div(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n  flex-grow: 1;\n  font-weight: bold;\n  line-height: 1.4em;\n  margin: 0;\n  font-size: 1em;\n"])));

var TitleBarRenderer = function TitleBarRenderer(_ref2, ref) {
  var children = _ref2.children,
      _ref2$title = _ref2.title,
      title = _ref2$title === void 0 ? 'UNKNOWN.EXE' : _ref2$title,
      icon = _ref2.icon,
      _ref2$active = _ref2.active,
      active = _ref2$active === void 0 ? true : _ref2$active,
      className = _ref2.className,
      props = _objectWithoutProperties(_ref2, _excluded);

  return /*#__PURE__*/_react["default"].createElement(TitleBarBackground, _extends({
    active: active,
    color: active ? 'headerText' : 'headerNotActiveText'
  }, props, {
    ref: ref
  }), icon && icon, /*#__PURE__*/_react["default"].createElement(Title, {
    className: className
  }, title), children);
};

var TitleBar = Object.assign( /*#__PURE__*/_react["default"].forwardRef(TitleBarRenderer), {
  Option: Option,
  OptionsBox: OptionsBox
});
var _default = TitleBar;
exports["default"] = _default;