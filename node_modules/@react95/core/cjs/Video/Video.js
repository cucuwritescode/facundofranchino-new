"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("@xstyled/styled-components"));

var _icons = require("@react95/icons");

var _system = require("@xstyled/system");

var _Frame = _interopRequireDefault(require("../Frame/Frame"));

var _Button = _interopRequireDefault(require("../Button"));

var _Range = _interopRequireDefault(require("../Range"));

var _TitleBar = _interopRequireDefault(require("../TitleBar"));

var _buttons = require("./buttons");

var _ListDivider = _interopRequireDefault(require("../List/ListDivider"));

var _excluded = ["name", "src", "videoProps", "style"];

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var VideoTag = _styledComponents["default"].video(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  width: 100%;\n  padding: 2;\n\n  display: ", ";\n"])), function (_ref) {
  var visible = _ref.visible;
  return visible ? 'block' : 'none';
});

var Source = function Source(_ref2) {
  var src = _ref2.src;
  return /*#__PURE__*/React.createElement("source", {
    src: src,
    type: "video/".concat(src.substring(src.length - 3))
  });
};

var ControlBtn = (0, _styledComponents["default"])(_Button["default"])(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n\n  svg {\n    fill: ", ";\n  }\n\n  &&,\n  &:active,\n  &:focus {\n    width: 20px;\n    height: 20px;\n    padding: 7;\n\n    ", "\n  }\n"])), (0, _system.th)('colors.materialText'), function (_ref3) {
  var disabled = _ref3.disabled;
  return disabled && (0, _styledComponents.css)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n        padding: 4;\n        svg {\n          fill: ", ";\n          border-bottom: 1px solid;\n          border-bottom-color: borderLightest;\n          border-right: 1px solid;\n          border-right-color: borderLightest;\n        }\n      "])), (0, _system.th)('colors.borderDark'));
});

var Controls = _styledComponents["default"].div(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n  display: flex;\n  align-items: center;\n  padding: 2 0;\n"])));

var CountDownContainer = (0, _styledComponents["default"])(_Frame["default"])(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n  display: flex;\n  padding: 6;\n  margin-bottom: 4;\n\n  box-shadow: in;\n  background-color: canvas;\n  height: 50px;\n\n  color: canvasText;\n"])));

var VideoFont = _styledComponents["default"].span(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n  font-family: 'React95Video-Numbers';\n  text-transform: uppercase;\n"])));

var ResetFrame = (0, _styledComponents["default"])(_Frame["default"])(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n  background-color: transparent;\n  box-shadow: none;\n"])));
var VideoRange = (0, _styledComponents["default"])(_Range["default"])(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["\n  &::-webkit-slider-thumb {\n    height: 18px;\n    margin-top: -7px;\n    width: 10px;\n  }\n\n  &[value='0']::-webkit-slider-thumb {\n    margin-left: -2px;\n  }\n"])));

var PlayOrPause = function PlayOrPause(_ref4) {
  var playing = _ref4.playing;
  return playing ? /*#__PURE__*/React.createElement(_buttons.Pause, null) : /*#__PURE__*/React.createElement(_buttons.Play, null);
};

var arrayFy = function arrayFy(str) {
  return [].concat(str);
};

function updateProgressBar(player, updateProgress) {
  var percentage = Math.floor(100 / player.duration * player.currentTime);
  updateProgress(percentage);
}

function parseCurrentTime(secs) {
  if (!secs) {
    return '00:00';
  }

  var sec = parseInt(secs.toString(), 10);
  var hours = Math.floor(sec / 3600);
  var minutes = Math.floor(sec / 60) % 60;
  var seconds = sec % 60;
  return [hours, minutes, seconds].map(function (v) {
    return v < 10 ? "0".concat(v) : v;
  }).filter(function (v, i) {
    return v !== '00' || i > 0;
  }).join(':');
}

var VideoRenderer = function VideoRenderer(_ref5, ref) {
  var name = _ref5.name,
      src = _ref5.src,
      videoProps = _ref5.videoProps,
      style = _ref5.style,
      props = _objectWithoutProperties(_ref5, _excluded);

  var _React$useState = React.useState(false),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      playing = _React$useState2[0],
      setPlaying = _React$useState2[1];

  var _React$useState3 = React.useState(false),
      _React$useState4 = _slicedToArray(_React$useState3, 2),
      loadeddata = _React$useState4[0],
      setLoadeddata = _React$useState4[1];

  var _React$useState5 = React.useState(0),
      _React$useState6 = _slicedToArray(_React$useState5, 2),
      progress = _React$useState6[0],
      setProgress = _React$useState6[1];

  var player = React.useRef(null);
  var progressRef = React.useRef(null);
  var wrapperRef = React.useRef(null);
  var playPauseRef = React.useRef(null);
  var stopRef = React.useRef(null);
  var fullScreenRef = React.useRef(null);
  var paths = arrayFy(src);

  var _paths = _slicedToArray(paths, 1),
      pathname = _paths[0];

  var normalizedName = name || pathname.replace(/^.*[\\/]/, '');
  var title = "".concat(normalizedName).concat(!loadeddata ? ' (Opening)' : '');
  React.useImperativeHandle(ref, function () {
    return {
      get video() {
        return player;
      },

      get progress() {
        return progressRef;
      },

      get wrapper() {
        return wrapperRef;
      },

      get playpause() {
        return playPauseRef;
      },

      get stop() {
        return stopRef;
      },

      get fullScreen() {
        return fullScreenRef;
      }

    };
  });
  React.useEffect(function () {
    var _player$current, _player$current2, _player$current3, _player$current4;

    (_player$current = player.current) === null || _player$current === void 0 ? void 0 : _player$current.addEventListener('ended', function () {
      setPlaying(false);
      setProgress(0);
    }, false);
    (_player$current2 = player.current) === null || _player$current2 === void 0 ? void 0 : _player$current2.addEventListener('timeupdate', function () {
      if (player.current) {
        updateProgressBar(player.current, setProgress);
      }
    }, false);
    (_player$current3 = player.current) === null || _player$current3 === void 0 ? void 0 : _player$current3.addEventListener('loadeddata', function () {
      setLoadeddata(true);
    }, false);
    (_player$current4 = player.current) === null || _player$current4 === void 0 ? void 0 : _player$current4.addEventListener('playing', function () {
      setPlaying(true);
    }, false);
  }, [player.current]);
  return /*#__PURE__*/React.createElement(_Frame["default"], _extends({
    p: 2
  }, props, {
    style: _objectSpread({
      width: !loadeddata ? 260 : undefined
    }, style),
    ref: wrapperRef
  }), /*#__PURE__*/React.createElement(_TitleBar["default"], {
    icon: /*#__PURE__*/React.createElement(_icons.Mplayer113, {
      variant: "16x16_4"
    }),
    title: title
  }), /*#__PURE__*/React.createElement(VideoTag, _extends({}, videoProps, {
    visible: loadeddata,
    ref: player
  }), paths.map(function (s) {
    return /*#__PURE__*/React.createElement(Source, {
      key: s,
      src: s
    });
  })), loadeddata && /*#__PURE__*/React.createElement(_ListDivider["default"], {
    as: "span",
    style: {
      display: 'block',
      marginBottom: 2
    }
  }), /*#__PURE__*/React.createElement(ResetFrame, {
    maxWidth: 250,
    mx: "auto",
    mb: 4
  }, /*#__PURE__*/React.createElement(CountDownContainer, null, /*#__PURE__*/React.createElement(ResetFrame, {
    display: "flex",
    flexDirection: "column",
    width: "40%"
  }, /*#__PURE__*/React.createElement(VideoFont, {
    style: {
      marginTop: 'auto'
    }
  }, player.current && parseCurrentTime(player.current.duration)), /*#__PURE__*/React.createElement(VideoFont, {
    style: {
      height: 12
    }
  }, !loadeddata && 'Openning')), /*#__PURE__*/React.createElement(ResetFrame, {
    display: "flex",
    flexDirection: "column",
    width: "40%"
  }, /*#__PURE__*/React.createElement(VideoFont, {
    style: {
      marginTop: 'auto',
      fontSize: 22
    }
  }, player.current && parseCurrentTime(player.current.currentTime)), /*#__PURE__*/React.createElement(VideoFont, {
    style: {
      height: 12
    }
  }, "time"))), /*#__PURE__*/React.createElement(Controls, null, /*#__PURE__*/React.createElement(ControlBtn, {
    disabled: !loadeddata,
    onClick: function onClick() {
      if (!playing) {
        var _player$current5;

        (_player$current5 = player.current) === null || _player$current5 === void 0 ? void 0 : _player$current5.play();
      } else {
        var _player$current6;

        (_player$current6 = player.current) === null || _player$current6 === void 0 ? void 0 : _player$current6.pause();
      }

      setPlaying(!playing);
    },
    ref: playPauseRef
  }, loadeddata ? /*#__PURE__*/React.createElement(PlayOrPause, {
    playing: playing
  }) : /*#__PURE__*/React.createElement(_icons.User4, {
    variant: "32x32_4"
  })), /*#__PURE__*/React.createElement(ControlBtn, {
    disabled: !loadeddata,
    onClick: function onClick() {
      if (player.current) {
        player.current.pause();
        player.current.currentTime = 0;
      }

      setPlaying(false);
    },
    ref: stopRef
  }, /*#__PURE__*/React.createElement(_buttons.Stop, null)), /*#__PURE__*/React.createElement(ControlBtn, {
    disabled: !loadeddata,
    onClick: function onClick() {
      var _player$current7;

      player === null || player === void 0 ? void 0 : (_player$current7 = player.current) === null || _player$current7 === void 0 ? void 0 : _player$current7.requestFullscreen();
    },
    ref: fullScreenRef
  }, /*#__PURE__*/React.createElement(_buttons.Fullscreen, null)), /*#__PURE__*/React.createElement(VideoRange, {
    ref: progressRef,
    min: "0",
    max: "100",
    step: "1",
    value: progress,
    style: {
      width: '70%',
      marginLeft: 20
    },
    onClick: function onClick(e) {
      var el = progressRef.current;
      var video = player.current;

      if (video && el) {
        var percent = e.nativeEvent.offsetX / el.offsetWidth;
        video.currentTime = percent * video.duration;
        setProgress(Math.floor(percent / 100));
      }
    }
  }))));
};

var Video = /*#__PURE__*/React.forwardRef(VideoRenderer);
var _default = Video;
exports["default"] = _default;