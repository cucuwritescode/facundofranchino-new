var _excluded = ["legend", "children"];

var _templateObject, _templateObject2;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React, { forwardRef } from 'react';
import styled from '@xstyled/styled-components';
import { th } from '@xstyled/system';
var Field = styled.fieldset(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  border-top-style: groove;\n  border-top-width: 2;\n  border-top-color: borderLighter;\n\n  border-left-style: groove;\n  border-left-width: 2;\n  border-left-color: borderLighter;\n\n  border-bottom-style: solid;\n  border-bottom-width: 1;\n  border-bottom-color: borderDark;\n\n  border-right-style: solid;\n  border-right-width: 1;\n  border-right-color: borderDark;\n\n  box-shadow: 1px 1px 0 0 ", ";\n"])), th('colors.borderLighter'));
var Legend = styled.legend(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  padding-left: 4px;\n  padding-right: 1px;\n"])));
var Fieldset = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var legend = _ref.legend,
      children = _ref.children,
      rest = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement(Field, _extends({}, rest, {
    ref: ref
  }), legend && /*#__PURE__*/React.createElement(Legend, null, legend), children);
});
export default Fieldset;