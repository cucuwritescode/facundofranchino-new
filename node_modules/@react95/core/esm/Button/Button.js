var _templateObject;

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import styled from '@xstyled/styled-components';
import { th } from '@xstyled/system';
var Button = styled.button(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  background-color: material;\n  padding: 7 20 5;\n  border: none;\n  color: materialText;\n\n  font-size: 12px;\n\n  box-shadow: inset 1px 1px 0px 1px ", ",\n    inset 0 0 0 1px ", ",\n    1px 1px 0 0px ", ";\n\n  &:disabled {\n    color: materialTextDisabled;\n  }\n\n  &:focus {\n    outline: ", "px dotted ", ";\n    outline-offset: -", "px;\n\n    box-shadow: inset 1px 1px 0px 1px ", ",\n      inset -0.5px -0.5px 0px 1px ", ",\n      1px 1px 0 1px ", ";\n  }\n\n  &:active {\n    padding: 8 20 4;\n\n    outline: ", "px dotted ", ";\n    outline-offset: -", "px;\n\n    box-shadow: inset 0 0 0 1px ", ",\n      0 0 0 1px ", ";\n  }\n"])), th('colors.borderLightest'), th('colors.borderDark'), th('colors.borderDarkest'), th('space.1'), th('colors.materialText'), th('space.5'), th('colors.borderLightest'), th('colors.borderDark'), th('colors.borderDarkest'), th('space.1'), th('colors.borderDarkest'), th('space.5'), th('colors.borderDark'), th('colors.borderDarkest'));
Button.defaultProps = {
  children: 'Ok'
};
export default Button;