function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import BaseTheme, { generateShadows } from './baseTheme';
var colors = {
  anchor: '#1034a6',
  anchorVisited: '#440381',
  borderDark: '#695f50',
  borderDarkest: '#28251e',
  borderLight: '#9d8f80',
  borderLighter: '#c9c1b9',
  borderLightest: '#e1dcd8',
  canvas: '#28251e',
  canvasText: '#d8d0c8',
  canvasTextDisabled: '#695f50',
  canvasTextDisabledShadow: '#baae9f',
  canvasTextInvert: '#ffffff',
  headerBackground: '#404878',
  headerNotActiveBackground: '#605848',
  headerNotActiveText: '#908070',
  headerText: '#d8d0c8',
  material: '#908070',
  materialDark: '#9a9e9c',
  materialText: '#28251e',
  materialTextDisabled: '#695f50',
  materialTextDisabledShadow: '#baae9f',
  materialTextInvert: '#ffffff',
  progress: '#48604f',
  inputBackground: '#ffffff',
  inputBackgroundDisabled: '#9d8f80',
  tooltip: '#fefbcc'
};

var travel = _objectSpread(_objectSpread({}, BaseTheme), {}, {
  colors: colors,
  shadows: generateShadows(colors)
});

export default travel;